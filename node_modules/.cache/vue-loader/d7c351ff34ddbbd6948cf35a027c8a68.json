{"remainingRequest":"/Users/rbector/Desktop/cookbook/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rbector/Desktop/cookbook/src/App.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/rbector/Desktop/cookbook/src/App.vue","mtime":1593804746644},{"path":"/Users/rbector/Desktop/cookbook/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBXYXRjaCB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgewogIEluZ3JlZGllbnREYXRhLAogIFVuaXRWb2x1bWUsCiAgVW5pdFN0cmluZ3MsCiAgRnJhY01hcAp9IGZyb20gIi4vY29tbW9uL2NvbW1vbiI7CmltcG9ydCB7IFRlc3RDYXNlcywgVGVzdFN0YXR1cyB9IGZyb20gIi4vdGVzdHMvdGVzdHMiOwoKQENvbXBvbmVudCh7CiAgY29tcG9uZW50czoge30KfSkKZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgVnVlIHsKICBwcml2YXRlIGF1dG9ncm93ID0gIjEgY3VwIG1pbGsiOwogIHByaXZhdGUgcGFyc2VkOiBJbmdyZWRpZW50RGF0YVtdID0gW107CiAgcHJpdmF0ZSBzdGFnZSA9IDA7CiAgcHJpdmF0ZSB0aGVtZSA9ICJkZWZhdWx0IjsKICBwcml2YXRlIHN0YXR1c2VzOiBUZXN0U3RhdHVzW10gPSBbXTsKCiAgYXN5bmMgZ2V0QW1hem9uUHJpY2UoKSB7CiAgICBjb25zdCBxdWVyeSA9ICJodHRwczovL3d3dy5hbWF6b24uY29tL3M/az1taWxrIjsKICAgIGNvbnN0IGNsaWVudDogSC5IdHRwQ2xpZW50ID0gbmV3IEguSHR0cENsaWVudCgiY29va2Jvb2siKTsKICAgIGNvbnN0IHJlc3A6IEguSHR0cENsaWVudFJlc3BvbnNlID0gYXdhaXQgY2xpZW50LmdldChxdWVyeSk7CiAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXNwLCBudWxsLCA0KSk7CiAgfQoKICBwcml2YXRlIG5leHRTdGFnZSgpIHsKICAgIGlmICh0aGlzLnN0YWdlID09PSAwKSB7CiAgICAgIHRoaXMucnVuUGFyc2VyKCk7CiAgICB9CiAgICB0aGlzLnN0YWdlKys7CiAgICBpZiAodGhpcy5zdGFnZSA9PT0gMykgewogICAgICB0aGlzLmdldEFtYXpvblByaWNlKCk7CiAgICB9CiAgfQoKICBwcml2YXRlIHJ1blBhcnNlcigpIHsKICAgIHRoaXMucGFyc2VkID0gW107CiAgICB0aGlzLmF1dG9ncm93LnNwbGl0KCJcbiIpLmZvckVhY2gobGluZSA9PiB0aGlzLnBhcnNlTGluZShsaW5lKSk7CiAgfQoKICBwcml2YXRlIHJ1blRlc3RzKCkgewogICAgdGhpcy5zdGFnZSA9IC0xOwogICAgdGhpcy5zdGF0dXNlcyA9IFtdOwogICAgVGVzdENhc2VzLmZvckVhY2godGMgPT4gewogICAgICB0aGlzLnN0YXR1c2VzLnB1c2goewogICAgICAgIG5hbWU6IHRjLm5hbWUsCiAgICAgICAgc3RhdHVzOiAiTk9UIFNUQVJURUQiCiAgICAgIH0pOwogICAgfSk7CiAgICBUZXN0Q2FzZXMuZm9yRWFjaCh0YyA9PiB7CiAgICAgIGNvbnN0IHN0YXR1c0RhdGFNYXliZSA9IHRoaXMuc3RhdHVzZXMuZmluZChzID0+IHMubmFtZSA9PSB0Yy5uYW1lKTsKICAgICAgbGV0IHN0YXR1c0RhdGEgPSB0aGlzLnN0YXR1c2VzWzBdOwogICAgICBpZiAoc3RhdHVzRGF0YU1heWJlKSBzdGF0dXNEYXRhID0gc3RhdHVzRGF0YU1heWJlOwogICAgICBzdGF0dXNEYXRhLnN0YXR1cyA9ICJSVU5OSU5HIjsKICAgICAgdGhpcy5hdXRvZ3JvdyA9IHRjLmlucHV0OwogICAgICB0aGlzLnJ1blBhcnNlcigpOwogICAgICBsZXQgY29ycmVjdCA9IHRydWU7CiAgICAgIGxldCBmYWlsZWQgPSAiIjsKICAgICAgbGV0IHJlYXNvbkNvbXBsZXRlID0gZmFsc2U7CiAgICAgIHRoaXMucGFyc2VkLmZvckVhY2goKGluZywgaW5kZXgpID0+IHsKICAgICAgICBpZiAoaW5nLm5hbWUgIT09IHRjLm91dHB1dFtpbmRleF0ubmFtZSkgewogICAgICAgICAgY29ycmVjdCA9IGZhbHNlOwogICAgICAgICAgZmFpbGVkID0gYEV4cGVjdGVkOiAke3RjLm91dHB1dFtpbmRleF0ubmFtZX1cbkdvdDogJHtpbmcubmFtZX1gOwogICAgICAgIH0KICAgICAgICBpZiAoaW5nLnF1YW50aXR5ICE9PSB0Yy5vdXRwdXRbaW5kZXhdLnF1YW50aXR5KSB7CiAgICAgICAgICBjb3JyZWN0ID0gZmFsc2U7CiAgICAgICAgICBmYWlsZWQgPSBgRXhwZWN0ZWQ6ICR7dGMub3V0cHV0W2luZGV4XS5xdWFudGl0eX1cbkdvdDogJHtpbmcucXVhbnRpdHl9YDsKICAgICAgICB9CiAgICAgICAgaWYgKGluZy51bml0ICE9PSB0Yy5vdXRwdXRbaW5kZXhdLnVuaXQpIHsKICAgICAgICAgIGNvcnJlY3QgPSBmYWxzZTsKICAgICAgICAgIGZhaWxlZCA9IGBFeHBlY3RlZDogJHt0Yy5vdXRwdXRbaW5kZXhdLnVuaXR9XG5Hb3Q6ICR7aW5nLnVuaXR9YDsKICAgICAgICB9CiAgICAgICAgaWYgKCFjb3JyZWN0ICYmICFyZWFzb25Db21wbGV0ZSkgewogICAgICAgICAgZmFpbGVkICs9IGBcbkZhaWxlZCBhdDogJHtKU09OLnN0cmluZ2lmeShpbmcsIG51bGwsIDQpfWA7CiAgICAgICAgICByZWFzb25Db21wbGV0ZSA9IHRydWU7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgaWYgKGNvcnJlY3QpIHN0YXR1c0RhdGEuc3RhdHVzID0gIlBBU1MiOwogICAgICBlbHNlIHsKICAgICAgICBzdGF0dXNEYXRhLnN0YXR1cyA9ICJGQUlMIjsKICAgICAgICBjb25zb2xlLmxvZygiVEVTVCBGQUlMRUQ6IFxuIiArIGZhaWxlZCk7CiAgICAgIH0KICAgIH0pOwogIH0KCiAgcHJpdmF0ZSBwYXJzZUxpbmUobGluZTogc3RyaW5nKSB7CiAgICBjb25zdCBpbmdyZWRpZW50ID0gewogICAgICBuYW1lOiAiIiwKICAgICAgcXVhbnRpdHk6IDAsCiAgICAgIHVuaXQ6IFVuaXRWb2x1bWUuTm9uZQogICAgfTsKICAgIGNvbnN0IHRva2VucyA9IGxpbmUudHJpbSgpLnNwbGl0KCIgIik7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykgewogICAgICBpZiAodGhpcy5pc1F1YW50aXR5KHRva2Vuc1tpXSkpIHsKICAgICAgICBpbmdyZWRpZW50LnF1YW50aXR5ID0gdGhpcy5wYXJzZVF1YW50aXR5KHRva2Vuc1tpXSk7CiAgICAgICAgY29udGludWU7CiAgICAgIH0KCiAgICAgIGNvbnN0IHBhcnNlZFVuaXQgPSB0aGlzLnBhcnNlVW5pdCh0b2tlbnNbaV0pOwogICAgICBpZiAocGFyc2VkVW5pdCAhPSBVbml0Vm9sdW1lLk5vbmUpIHsKICAgICAgICBpbmdyZWRpZW50LnVuaXQgPSBwYXJzZWRVbml0OwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CgogICAgICBpbmdyZWRpZW50Lm5hbWUgKz0gdG9rZW5zW2ldICsgIiAiOwogICAgfQoKICAgIGluZ3JlZGllbnQubmFtZSA9IGluZ3JlZGllbnQubmFtZS50cmltKCk7CiAgICBpZiAoaW5ncmVkaWVudC5uYW1lLmluY2x1ZGVzKCIsIikpIHsKICAgICAgaW5ncmVkaWVudC5uYW1lID0gaW5ncmVkaWVudC5uYW1lLnN1YnN0cmluZygKICAgICAgICAwLAogICAgICAgIGluZ3JlZGllbnQubmFtZS5pbmRleE9mKCIsIikKICAgICAgKTsKICAgIH0KCiAgICB0aGlzLnBhcnNlZC5wdXNoKGluZ3JlZGllbnQpOwogIH0KCiAgcHJpdmF0ZSBwYXJzZVVuaXQodG9rZW46IHN0cmluZyk6IFVuaXRWb2x1bWUgewogICAgY29uc3QgcHJvY2Vzc2VkID0gdG9rZW4udG9Mb3dlckNhc2UoKTsKICAgIGNvbnN0IGRvZXNJbmNsdWRlQXJyYXkgPSAoaW5wdXQ6IHN0cmluZywgdGVybXM6IHN0cmluZ1tdKTogYm9vbGVhbiA9PiB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGVybXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoaW5wdXQuaW5jbHVkZXModGVybXNbaV0pKSByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgICByZXR1cm4gZmFsc2U7CiAgICB9OwoKICAgIGlmIChkb2VzSW5jbHVkZUFycmF5KHByb2Nlc3NlZCwgVW5pdFN0cmluZ3MuY3VwKSkgewogICAgICByZXR1cm4gVW5pdFZvbHVtZS5DdXA7CiAgICB9CiAgICBpZiAoZG9lc0luY2x1ZGVBcnJheShwcm9jZXNzZWQsIFVuaXRTdHJpbmdzLnRhYmxlc3Bvb24pKQogICAgICByZXR1cm4gVW5pdFZvbHVtZS5UYWJsZXNwb29uOwogICAgaWYgKGRvZXNJbmNsdWRlQXJyYXkocHJvY2Vzc2VkLCBVbml0U3RyaW5ncy50ZWFzcG9vbikpCiAgICAgIHJldHVybiBVbml0Vm9sdW1lLlRlYXNwb29uOwogICAgaWYgKGRvZXNJbmNsdWRlQXJyYXkocHJvY2Vzc2VkLCBVbml0U3RyaW5ncy5vdW5jZSkpIHJldHVybiBVbml0Vm9sdW1lLk91bmNlOwogICAgcmV0dXJuIFVuaXRWb2x1bWUuTm9uZTsKICB9CgogIHByaXZhdGUgaXNRdWFudGl0eSh0b2tlbjogc3RyaW5nKTogYm9vbGVhbiB7CiAgICBjb25zdCBjaGFycyA9IHRva2VuLnNwbGl0KCIiKTsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKGNoYXJzW2ldIGluIEZyYWNNYXApIHsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgICBpZiAoaXNOYU4oTnVtYmVyKGNoYXJzW2ldKSkgJiYgY2hhcnNbaV0gIT09ICIvIiAmJiBjaGFyc1tpXSAhPT0gIi4iKQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIHJldHVybiB0cnVlOwogIH0KCiAgcHJpdmF0ZSBwYXJzZVF1YW50aXR5KHRva2VuOiBzdHJpbmcpOiBudW1iZXIgewogICAgY29uc3QgY2hhcnMgPSB0b2tlbi5zcGxpdCgiIik7CiAgICBsZXQgc2hvdWxkRXZhbCA9IGZhbHNlOwogICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFycy5sZW5ndGg7IGkrKykgewogICAgICBpZiAoY2hhcnNbaV0gaW4gRnJhY01hcCkgewogICAgICAgIGNoYXJzW2ldID0gRnJhY01hcFtjaGFyc1tpXV07CiAgICAgICAgc2hvdWxkRXZhbCA9IHRydWU7CiAgICAgIH0KICAgIH0KICAgIGlmIChzaG91bGRFdmFsKSB7CiAgICAgIGNvbnN0IGpvaW5lZCA9IGNoYXJzLmpvaW4oIisiKTsKICAgICAgcmV0dXJuIE51bWJlcihldmFsKGpvaW5lZCkpOwogICAgfQogICAgaWYgKHRva2VuLmluY2x1ZGVzKCIvIikpIHsKICAgICAgY29uc3QgZnJhYyA9IHRva2VuLnNwbGl0KCIvIik7CiAgICAgIHJldHVybiBOdW1iZXIoZnJhY1swXSkgLyBOdW1iZXIoZnJhY1sxXSk7CiAgICB9CiAgICByZXR1cm4gTnVtYmVyKHRva2VuKTsKICB9CgogIHByaXZhdGUgYmFja1RvTWFpbigpIHsKICAgIHRoaXMuYXV0b2dyb3cgPSAiIjsKICAgIHRoaXMucGFyc2VkID0gW107CiAgICB0aGlzLnN0YWdlID0gMDsKICB9CgogIHByaXZhdGUgdGVzdENvbG9yKG5hbWU6IHN0cmluZykgewogICAgY29uc3Qgc3RhdHVzRGF0YSA9IHRoaXMuc3RhdHVzZXMuZmluZChzID0+IHMubmFtZSA9PSBuYW1lKTsKICAgIGlmIChzdGF0dXNEYXRhKQogICAgICBpZiAoc3RhdHVzRGF0YS5zdGF0dXMgPT0gIlBBU1MiKSByZXR1cm4gImNvbG9yOiBkYXJrc2VhZ3JlZW47IjsKICAgIGlmIChzdGF0dXNEYXRhKSBpZiAoc3RhdHVzRGF0YS5zdGF0dXMgPT0gIkZBSUwiKSByZXR1cm4gImNvbG9yOiBvcmFuZ2VyZWQ7IjsKICB9CgogIHByaXZhdGUgc2V0RGFya01vZGUoKSB7CiAgICB0aGlzLnRoZW1lID0gInRlc3RpbmciOwogIH0KCiAgcHJpdmF0ZSBzZXRMaWdodE1vZGUoKSB7CiAgICB0aGlzLnRoZW1lID0gImRlZmF1bHQiOwogIH0KCiAgZ2V0IHRlc3RTdGF0dXMoKTogVGVzdFN0YXR1c1tdIHsKICAgIHJldHVybiB0aGlzLnN0YXR1c2VzOwogIH0KCiAgZ2V0IHRvcFN0eWxlKCk6IHN0cmluZyB7CiAgICBpZiAodGhpcy50aGVtZSA9PT0gImRlZmF1bHQiKSByZXR1cm4gIiI7CiAgICByZXR1cm4gImJhY2tncm91bmQtY29sb3I6ICM0MjQyNDI7IjsKICB9CgogIGdldCBhcHBTdHlsZSgpOiBzdHJpbmcgewogICAgcmV0dXJuIGBoZWlnaHQ6ICR7d2luZG93LmlubmVySGVpZ2h0fXB4YDsKICB9CgogIEBXYXRjaCgic3RhZ2UiKQogIHN0YWdlQ2hhbmdlZChuZXdTdGFnZTogbnVtYmVyKSB7CiAgICBpZiAobmV3U3RhZ2UgPT09IDEpIHsKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy5zdGFnZSsrOwogICAgICB9LCAwKTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" v-bind:style=\"topStyle\">\n    <md-button\n      v-if=\"stage == 0 && theme == 'default'\"\n      v-on:click=\"setDarkMode\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 4%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Dark Theme</md-button>\n    <md-button\n      v-if=\"stage == 0 && theme == 'testing'\"\n      v-on:click=\"setLightMode\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 4%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Light Theme</md-button>\n    <md-button\n      v-if=\"stage == 0\"\n      v-on:click=\"runTests\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 1%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Run Tests</md-button>\n    <md-button\n      v-if=\"stage == -1\"\n      v-on:click=\"backToMain\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 1%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Back</md-button>\n    <div :style=\"appStyle\">\n      <md-card v-if=\"stage == 0\" class=\"centered\" v-bind:md-theme=\"theme\">\n        <md-card-content style=\"height: 100%;\">\n          <md-field>\n            <md-textarea placeholder=\"Enter ingredients here.\" v-model=\"autogrow\" md-autogrow></md-textarea>\n          </md-field>\n        </md-card-content>\n        <div class=\"md-layout\" style=\"height: 100%;\">\n          <div class=\"md-layout-item\"></div>\n          <div class=\"md-layout-item\">\n            <md-button\n              v-on:click=\"nextStage\"\n              class=\"md-raised centerbutton\"\n              style=\"font-size: 15px;\"\n            >Go</md-button>\n          </div>\n          <div class=\"md-layout-item\"></div>\n        </div>\n      </md-card>\n      <div v-if=\"stage == 1\" style=\"height: 100%;\">\n        <span\n          class=\"md-subheading\"\n          style=\"position: absolute; left: 50%; top: 50%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        >Organizing the cookbook...</span>\n        <pacman-loader\n          class=\"centered\"\n          style=\"position: absolute; left: 47.5%; top: 40%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        />\n      </div>\n      <div v-if=\"stage == 2\" style=\"height: 100%;\">\n        <span\n          class=\"md-title\"\n          style=\"position: absolute; left: 50%; top: 10%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        >Ok, does this look right?</span>\n        <md-card class=\"centered-without-height\" v-bind:md-theme=\"theme\">\n          <md-card-content style=\"height: 100%;\">\n            <md-table v-model=\"parsed\">\n              <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                <md-table-cell md-label=\"Quantity\" md-sort-by=\"quantity\">\n                  {{\n                  item.quantity\n                  }}\n                </md-table-cell>\n                <md-table-cell md-label=\"Unit\" md-sort-by=\"unit\">\n                  {{\n                  item.unit\n                  }}\n                </md-table-cell>\n                <md-table-cell md-label=\"Ingredient\" md-sort-by=\"ingredient\">\n                  {{\n                  item.name\n                  }}\n                </md-table-cell>\n              </md-table-row>\n            </md-table>\n          </md-card-content>\n          <div class=\"md-layout\" style=\"height: 100%;\">\n            <div class=\"md-layout-item\"></div>\n            <div class=\"md-layout-item\">\n              <md-button v-on:click=\"nextStage\" class=\"md-raised md-primary centerbutton-top\">Yes</md-button>\n            </div>\n            <div class=\"md-layout-item\"></div>\n          </div>\n        </md-card>\n      </div>\n      <div v-if=\"stage == 3\" style=\"height: 100%;\">\n        <span\n          class=\"md-subheading\"\n          style=\"position: absolute; left: 50%; top: 50%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        >Crunching the numbers...</span>\n        <pacman-loader\n          class=\"centered\"\n          style=\"position: absolute; left: 47.5%; top: 40%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        />\n      </div>\n      <div v-if=\"stage == -1\" style=\"height: 100%;\">\n        <md-card class=\"centered\" v-bind:md-theme=\"theme\">\n          <md-card-content style=\"height: 100%;\">\n            <md-table v-model=\"testStatus\">\n              <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                <md-table-cell\n                  href=\"https://pornhub.com\"\n                  md-label=\"Test\"\n                  md-sort-by=\"quantity\"\n                  v-bind:style=\"testColor(item.name)\"\n                >\n                  {{\n                  item.name\n                  }}\n                </md-table-cell>\n                <md-table-cell\n                  md-label=\"Status\"\n                  md-sort-by=\"unit\"\n                  v-bind:style=\"testColor(item.name)\"\n                >\n                  {{\n                  item.status\n                  }}\n                </md-table-cell>\n              </md-table-row>\n            </md-table>\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Watch } from \"vue-property-decorator\";\nimport {\n  IngredientData,\n  UnitVolume,\n  UnitStrings,\n  FracMap\n} from \"./common/common\";\nimport { TestCases, TestStatus } from \"./tests/tests\";\n\n@Component({\n  components: {}\n})\nexport default class App extends Vue {\n  private autogrow = \"1 cup milk\";\n  private parsed: IngredientData[] = [];\n  private stage = 0;\n  private theme = \"default\";\n  private statuses: TestStatus[] = [];\n\n  async getAmazonPrice() {\n    const query = \"https://www.amazon.com/s?k=milk\";\n    const client: H.HttpClient = new H.HttpClient(\"cookbook\");\n    const resp: H.HttpClientResponse = await client.get(query);\n    console.log(JSON.stringify(resp, null, 4));\n  }\n\n  private nextStage() {\n    if (this.stage === 0) {\n      this.runParser();\n    }\n    this.stage++;\n    if (this.stage === 3) {\n      this.getAmazonPrice();\n    }\n  }\n\n  private runParser() {\n    this.parsed = [];\n    this.autogrow.split(\"\\n\").forEach(line => this.parseLine(line));\n  }\n\n  private runTests() {\n    this.stage = -1;\n    this.statuses = [];\n    TestCases.forEach(tc => {\n      this.statuses.push({\n        name: tc.name,\n        status: \"NOT STARTED\"\n      });\n    });\n    TestCases.forEach(tc => {\n      const statusDataMaybe = this.statuses.find(s => s.name == tc.name);\n      let statusData = this.statuses[0];\n      if (statusDataMaybe) statusData = statusDataMaybe;\n      statusData.status = \"RUNNING\";\n      this.autogrow = tc.input;\n      this.runParser();\n      let correct = true;\n      let failed = \"\";\n      let reasonComplete = false;\n      this.parsed.forEach((ing, index) => {\n        if (ing.name !== tc.output[index].name) {\n          correct = false;\n          failed = `Expected: ${tc.output[index].name}\\nGot: ${ing.name}`;\n        }\n        if (ing.quantity !== tc.output[index].quantity) {\n          correct = false;\n          failed = `Expected: ${tc.output[index].quantity}\\nGot: ${ing.quantity}`;\n        }\n        if (ing.unit !== tc.output[index].unit) {\n          correct = false;\n          failed = `Expected: ${tc.output[index].unit}\\nGot: ${ing.unit}`;\n        }\n        if (!correct && !reasonComplete) {\n          failed += `\\nFailed at: ${JSON.stringify(ing, null, 4)}`;\n          reasonComplete = true;\n        }\n      });\n      if (correct) statusData.status = \"PASS\";\n      else {\n        statusData.status = \"FAIL\";\n        console.log(\"TEST FAILED: \\n\" + failed);\n      }\n    });\n  }\n\n  private parseLine(line: string) {\n    const ingredient = {\n      name: \"\",\n      quantity: 0,\n      unit: UnitVolume.None\n    };\n    const tokens = line.trim().split(\" \");\n    for (let i = 0; i < tokens.length; i++) {\n      if (this.isQuantity(tokens[i])) {\n        ingredient.quantity = this.parseQuantity(tokens[i]);\n        continue;\n      }\n\n      const parsedUnit = this.parseUnit(tokens[i]);\n      if (parsedUnit != UnitVolume.None) {\n        ingredient.unit = parsedUnit;\n        continue;\n      }\n\n      ingredient.name += tokens[i] + \" \";\n    }\n\n    ingredient.name = ingredient.name.trim();\n    if (ingredient.name.includes(\",\")) {\n      ingredient.name = ingredient.name.substring(\n        0,\n        ingredient.name.indexOf(\",\")\n      );\n    }\n\n    this.parsed.push(ingredient);\n  }\n\n  private parseUnit(token: string): UnitVolume {\n    const processed = token.toLowerCase();\n    const doesIncludeArray = (input: string, terms: string[]): boolean => {\n      for (let i = 0; i < terms.length; i++) {\n        if (input.includes(terms[i])) return true;\n      }\n      return false;\n    };\n\n    if (doesIncludeArray(processed, UnitStrings.cup)) {\n      return UnitVolume.Cup;\n    }\n    if (doesIncludeArray(processed, UnitStrings.tablespoon))\n      return UnitVolume.Tablespoon;\n    if (doesIncludeArray(processed, UnitStrings.teaspoon))\n      return UnitVolume.Teaspoon;\n    if (doesIncludeArray(processed, UnitStrings.ounce)) return UnitVolume.Ounce;\n    return UnitVolume.None;\n  }\n\n  private isQuantity(token: string): boolean {\n    const chars = token.split(\"\");\n    for (let i = 0; i < chars.length; i++) {\n      if (chars[i] in FracMap) {\n        continue;\n      }\n      if (isNaN(Number(chars[i])) && chars[i] !== \"/\" && chars[i] !== \".\")\n        return false;\n    }\n    return true;\n  }\n\n  private parseQuantity(token: string): number {\n    const chars = token.split(\"\");\n    let shouldEval = false;\n    for (let i = 0; i < chars.length; i++) {\n      if (chars[i] in FracMap) {\n        chars[i] = FracMap[chars[i]];\n        shouldEval = true;\n      }\n    }\n    if (shouldEval) {\n      const joined = chars.join(\"+\");\n      return Number(eval(joined));\n    }\n    if (token.includes(\"/\")) {\n      const frac = token.split(\"/\");\n      return Number(frac[0]) / Number(frac[1]);\n    }\n    return Number(token);\n  }\n\n  private backToMain() {\n    this.autogrow = \"\";\n    this.parsed = [];\n    this.stage = 0;\n  }\n\n  private testColor(name: string) {\n    const statusData = this.statuses.find(s => s.name == name);\n    if (statusData)\n      if (statusData.status == \"PASS\") return \"color: darkseagreen;\";\n    if (statusData) if (statusData.status == \"FAIL\") return \"color: orangered;\";\n  }\n\n  private setDarkMode() {\n    this.theme = \"testing\";\n  }\n\n  private setLightMode() {\n    this.theme = \"default\";\n  }\n\n  get testStatus(): TestStatus[] {\n    return this.statuses;\n  }\n\n  get topStyle(): string {\n    if (this.theme === \"default\") return \"\";\n    return \"background-color: #424242;\";\n  }\n\n  get appStyle(): string {\n    return `height: ${window.innerHeight}px`;\n  }\n\n  @Watch(\"stage\")\n  stageChanged(newStage: number) {\n    if (newStage === 1) {\n      setTimeout(() => {\n        this.stage++;\n      }, 0);\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.centered {\n  margin: auto;\n  width: 50%;\n  height: 40%;\n  top: 20%;\n}\n\n.centered-without-height {\n  margin: auto;\n  width: 50%;\n  top: 20%;\n}\n\n.centerbutton {\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  top: 50%;\n}\n\n.centerbutton-top {\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  top: 200%;\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~vue-material/dist/theme/engine\"; // Import the theme engine\n\n@include md-register-theme(\n  \"default\",\n  (\n    primary: md-get-palette-color(blue, A200),\n    // The primary color of your application\n      accent: md-get-palette-color(red, A200),\n    // The accent or secondary color\n      theme: light,\n    // This can be dark or light\n  )\n);\n\n@include md-register-theme(\n  \"testing\",\n  (\n    primary: md-get-palette-color(blue, A200),\n    // The primary color of your application\n      accent: md-get-palette-color(red, A200),\n    // The accent or secondary color\n      theme: dark,\n    // This can be dark or light\n  )\n);\n\n@import \"~vue-material/dist/theme/all\"; // Apply the theme\n</style>"]}]}