{"remainingRequest":"/Users/rbector/Desktop/cookbook/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rbector/Desktop/cookbook/src/App.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/rbector/Desktop/cookbook/src/App.vue","mtime":1593805346972},{"path":"/Users/rbector/Desktop/cookbook/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rbector/Desktop/cookbook/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBXYXRjaCB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgewogIEluZ3JlZGllbnREYXRhLAogIFVuaXRWb2x1bWUsCiAgVW5pdFN0cmluZ3MsCiAgRnJhY01hcAp9IGZyb20gIi4vY29tbW9uL2NvbW1vbiI7CmltcG9ydCB7IFRlc3RDYXNlcywgVGVzdFN0YXR1cyB9IGZyb20gIi4vdGVzdHMvdGVzdHMiOwppbXBvcnQgKiBhcyBKIGZyb20gImpzZG9tIjsKCkBDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHt9Cn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIFZ1ZSB7CiAgcHJpdmF0ZSBhdXRvZ3JvdyA9ICIxIGN1cCBtaWxrIjsKICBwcml2YXRlIHBhcnNlZDogSW5ncmVkaWVudERhdGFbXSA9IFtdOwogIHByaXZhdGUgc3RhZ2UgPSAwOwogIHByaXZhdGUgdGhlbWUgPSAiZGVmYXVsdCI7CiAgcHJpdmF0ZSBzdGF0dXNlczogVGVzdFN0YXR1c1tdID0gW107CgogIGFzeW5jIGdldEFtYXpvblByaWNlKCkgewogICAgY29uc3QgcXVlcnkgPSAiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9zP2s9bWlsayI7CiAgICBKLkpTRE9NLmZyb21VUkwocXVlcnkpLnRoZW4oZG9tID0+IHsKICAgICAgY29uc29sZS5sb2coZG9tLnNlcmlhbGl6ZSgpKTsKICAgIH0pOwogIH0KCiAgcHJpdmF0ZSBuZXh0U3RhZ2UoKSB7CiAgICBpZiAodGhpcy5zdGFnZSA9PT0gMCkgewogICAgICB0aGlzLnJ1blBhcnNlcigpOwogICAgfQogICAgdGhpcy5zdGFnZSsrOwogICAgaWYgKHRoaXMuc3RhZ2UgPT09IDMpIHsKICAgICAgdGhpcy5nZXRBbWF6b25QcmljZSgpOwogICAgfQogIH0KCiAgcHJpdmF0ZSBydW5QYXJzZXIoKSB7CiAgICB0aGlzLnBhcnNlZCA9IFtdOwogICAgdGhpcy5hdXRvZ3Jvdy5zcGxpdCgiXG4iKS5mb3JFYWNoKGxpbmUgPT4gdGhpcy5wYXJzZUxpbmUobGluZSkpOwogIH0KCiAgcHJpdmF0ZSBydW5UZXN0cygpIHsKICAgIHRoaXMuc3RhZ2UgPSAtMTsKICAgIHRoaXMuc3RhdHVzZXMgPSBbXTsKICAgIFRlc3RDYXNlcy5mb3JFYWNoKHRjID0+IHsKICAgICAgdGhpcy5zdGF0dXNlcy5wdXNoKHsKICAgICAgICBuYW1lOiB0Yy5uYW1lLAogICAgICAgIHN0YXR1czogIk5PVCBTVEFSVEVEIgogICAgICB9KTsKICAgIH0pOwogICAgVGVzdENhc2VzLmZvckVhY2godGMgPT4gewogICAgICBjb25zdCBzdGF0dXNEYXRhTWF5YmUgPSB0aGlzLnN0YXR1c2VzLmZpbmQocyA9PiBzLm5hbWUgPT0gdGMubmFtZSk7CiAgICAgIGxldCBzdGF0dXNEYXRhID0gdGhpcy5zdGF0dXNlc1swXTsKICAgICAgaWYgKHN0YXR1c0RhdGFNYXliZSkgc3RhdHVzRGF0YSA9IHN0YXR1c0RhdGFNYXliZTsKICAgICAgc3RhdHVzRGF0YS5zdGF0dXMgPSAiUlVOTklORyI7CiAgICAgIHRoaXMuYXV0b2dyb3cgPSB0Yy5pbnB1dDsKICAgICAgdGhpcy5ydW5QYXJzZXIoKTsKICAgICAgbGV0IGNvcnJlY3QgPSB0cnVlOwogICAgICBsZXQgZmFpbGVkID0gIiI7CiAgICAgIGxldCByZWFzb25Db21wbGV0ZSA9IGZhbHNlOwogICAgICB0aGlzLnBhcnNlZC5mb3JFYWNoKChpbmcsIGluZGV4KSA9PiB7CiAgICAgICAgaWYgKGluZy5uYW1lICE9PSB0Yy5vdXRwdXRbaW5kZXhdLm5hbWUpIHsKICAgICAgICAgIGNvcnJlY3QgPSBmYWxzZTsKICAgICAgICAgIGZhaWxlZCA9IGBFeHBlY3RlZDogJHt0Yy5vdXRwdXRbaW5kZXhdLm5hbWV9XG5Hb3Q6ICR7aW5nLm5hbWV9YDsKICAgICAgICB9CiAgICAgICAgaWYgKGluZy5xdWFudGl0eSAhPT0gdGMub3V0cHV0W2luZGV4XS5xdWFudGl0eSkgewogICAgICAgICAgY29ycmVjdCA9IGZhbHNlOwogICAgICAgICAgZmFpbGVkID0gYEV4cGVjdGVkOiAke3RjLm91dHB1dFtpbmRleF0ucXVhbnRpdHl9XG5Hb3Q6ICR7aW5nLnF1YW50aXR5fWA7CiAgICAgICAgfQogICAgICAgIGlmIChpbmcudW5pdCAhPT0gdGMub3V0cHV0W2luZGV4XS51bml0KSB7CiAgICAgICAgICBjb3JyZWN0ID0gZmFsc2U7CiAgICAgICAgICBmYWlsZWQgPSBgRXhwZWN0ZWQ6ICR7dGMub3V0cHV0W2luZGV4XS51bml0fVxuR290OiAke2luZy51bml0fWA7CiAgICAgICAgfQogICAgICAgIGlmICghY29ycmVjdCAmJiAhcmVhc29uQ29tcGxldGUpIHsKICAgICAgICAgIGZhaWxlZCArPSBgXG5GYWlsZWQgYXQ6ICR7SlNPTi5zdHJpbmdpZnkoaW5nLCBudWxsLCA0KX1gOwogICAgICAgICAgcmVhc29uQ29tcGxldGUgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGlmIChjb3JyZWN0KSBzdGF0dXNEYXRhLnN0YXR1cyA9ICJQQVNTIjsKICAgICAgZWxzZSB7CiAgICAgICAgc3RhdHVzRGF0YS5zdGF0dXMgPSAiRkFJTCI7CiAgICAgICAgY29uc29sZS5sb2coIlRFU1QgRkFJTEVEOiBcbiIgKyBmYWlsZWQpOwogICAgICB9CiAgICB9KTsKICB9CgogIHByaXZhdGUgcGFyc2VMaW5lKGxpbmU6IHN0cmluZykgewogICAgY29uc3QgaW5ncmVkaWVudCA9IHsKICAgICAgbmFtZTogIiIsCiAgICAgIHF1YW50aXR5OiAwLAogICAgICB1bml0OiBVbml0Vm9sdW1lLk5vbmUKICAgIH07CiAgICBjb25zdCB0b2tlbnMgPSBsaW5lLnRyaW0oKS5zcGxpdCgiICIpOwogICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKHRoaXMuaXNRdWFudGl0eSh0b2tlbnNbaV0pKSB7CiAgICAgICAgaW5ncmVkaWVudC5xdWFudGl0eSA9IHRoaXMucGFyc2VRdWFudGl0eSh0b2tlbnNbaV0pOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CgogICAgICBjb25zdCBwYXJzZWRVbml0ID0gdGhpcy5wYXJzZVVuaXQodG9rZW5zW2ldKTsKICAgICAgaWYgKHBhcnNlZFVuaXQgIT0gVW5pdFZvbHVtZS5Ob25lKSB7CiAgICAgICAgaW5ncmVkaWVudC51bml0ID0gcGFyc2VkVW5pdDsKICAgICAgICBjb250aW51ZTsKICAgICAgfQoKICAgICAgaW5ncmVkaWVudC5uYW1lICs9IHRva2Vuc1tpXSArICIgIjsKICAgIH0KCiAgICBpbmdyZWRpZW50Lm5hbWUgPSBpbmdyZWRpZW50Lm5hbWUudHJpbSgpOwogICAgaWYgKGluZ3JlZGllbnQubmFtZS5pbmNsdWRlcygiLCIpKSB7CiAgICAgIGluZ3JlZGllbnQubmFtZSA9IGluZ3JlZGllbnQubmFtZS5zdWJzdHJpbmcoCiAgICAgICAgMCwKICAgICAgICBpbmdyZWRpZW50Lm5hbWUuaW5kZXhPZigiLCIpCiAgICAgICk7CiAgICB9CgogICAgdGhpcy5wYXJzZWQucHVzaChpbmdyZWRpZW50KTsKICB9CgogIHByaXZhdGUgcGFyc2VVbml0KHRva2VuOiBzdHJpbmcpOiBVbml0Vm9sdW1lIHsKICAgIGNvbnN0IHByb2Nlc3NlZCA9IHRva2VuLnRvTG93ZXJDYXNlKCk7CiAgICBjb25zdCBkb2VzSW5jbHVkZUFycmF5ID0gKGlucHV0OiBzdHJpbmcsIHRlcm1zOiBzdHJpbmdbXSk6IGJvb2xlYW4gPT4gewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRlcm1zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKGlucHV0LmluY2x1ZGVzKHRlcm1zW2ldKSkgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlOwogICAgfTsKCiAgICBpZiAoZG9lc0luY2x1ZGVBcnJheShwcm9jZXNzZWQsIFVuaXRTdHJpbmdzLmN1cCkpIHsKICAgICAgcmV0dXJuIFVuaXRWb2x1bWUuQ3VwOwogICAgfQogICAgaWYgKGRvZXNJbmNsdWRlQXJyYXkocHJvY2Vzc2VkLCBVbml0U3RyaW5ncy50YWJsZXNwb29uKSkKICAgICAgcmV0dXJuIFVuaXRWb2x1bWUuVGFibGVzcG9vbjsKICAgIGlmIChkb2VzSW5jbHVkZUFycmF5KHByb2Nlc3NlZCwgVW5pdFN0cmluZ3MudGVhc3Bvb24pKQogICAgICByZXR1cm4gVW5pdFZvbHVtZS5UZWFzcG9vbjsKICAgIGlmIChkb2VzSW5jbHVkZUFycmF5KHByb2Nlc3NlZCwgVW5pdFN0cmluZ3Mub3VuY2UpKSByZXR1cm4gVW5pdFZvbHVtZS5PdW5jZTsKICAgIHJldHVybiBVbml0Vm9sdW1lLk5vbmU7CiAgfQoKICBwcml2YXRlIGlzUXVhbnRpdHkodG9rZW46IHN0cmluZyk6IGJvb2xlYW4gewogICAgY29uc3QgY2hhcnMgPSB0b2tlbi5zcGxpdCgiIik7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoYXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgIGlmIChjaGFyc1tpXSBpbiBGcmFjTWFwKSB7CiAgICAgICAgY29udGludWU7CiAgICAgIH0KICAgICAgaWYgKGlzTmFOKE51bWJlcihjaGFyc1tpXSkpICYmIGNoYXJzW2ldICE9PSAiLyIgJiYgY2hhcnNbaV0gIT09ICIuIikKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIHByaXZhdGUgcGFyc2VRdWFudGl0eSh0b2tlbjogc3RyaW5nKTogbnVtYmVyIHsKICAgIGNvbnN0IGNoYXJzID0gdG9rZW4uc3BsaXQoIiIpOwogICAgbGV0IHNob3VsZEV2YWwgPSBmYWxzZTsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHsKICAgICAgaWYgKGNoYXJzW2ldIGluIEZyYWNNYXApIHsKICAgICAgICBjaGFyc1tpXSA9IEZyYWNNYXBbY2hhcnNbaV1dOwogICAgICAgIHNob3VsZEV2YWwgPSB0cnVlOwogICAgICB9CiAgICB9CiAgICBpZiAoc2hvdWxkRXZhbCkgewogICAgICBjb25zdCBqb2luZWQgPSBjaGFycy5qb2luKCIrIik7CiAgICAgIHJldHVybiBOdW1iZXIoZXZhbChqb2luZWQpKTsKICAgIH0KICAgIGlmICh0b2tlbi5pbmNsdWRlcygiLyIpKSB7CiAgICAgIGNvbnN0IGZyYWMgPSB0b2tlbi5zcGxpdCgiLyIpOwogICAgICByZXR1cm4gTnVtYmVyKGZyYWNbMF0pIC8gTnVtYmVyKGZyYWNbMV0pOwogICAgfQogICAgcmV0dXJuIE51bWJlcih0b2tlbik7CiAgfQoKICBwcml2YXRlIGJhY2tUb01haW4oKSB7CiAgICB0aGlzLmF1dG9ncm93ID0gIiI7CiAgICB0aGlzLnBhcnNlZCA9IFtdOwogICAgdGhpcy5zdGFnZSA9IDA7CiAgfQoKICBwcml2YXRlIHRlc3RDb2xvcihuYW1lOiBzdHJpbmcpIHsKICAgIGNvbnN0IHN0YXR1c0RhdGEgPSB0aGlzLnN0YXR1c2VzLmZpbmQocyA9PiBzLm5hbWUgPT0gbmFtZSk7CiAgICBpZiAoc3RhdHVzRGF0YSkKICAgICAgaWYgKHN0YXR1c0RhdGEuc3RhdHVzID09ICJQQVNTIikgcmV0dXJuICJjb2xvcjogZGFya3NlYWdyZWVuOyI7CiAgICBpZiAoc3RhdHVzRGF0YSkgaWYgKHN0YXR1c0RhdGEuc3RhdHVzID09ICJGQUlMIikgcmV0dXJuICJjb2xvcjogb3JhbmdlcmVkOyI7CiAgfQoKICBwcml2YXRlIHNldERhcmtNb2RlKCkgewogICAgdGhpcy50aGVtZSA9ICJ0ZXN0aW5nIjsKICB9CgogIHByaXZhdGUgc2V0TGlnaHRNb2RlKCkgewogICAgdGhpcy50aGVtZSA9ICJkZWZhdWx0IjsKICB9CgogIGdldCB0ZXN0U3RhdHVzKCk6IFRlc3RTdGF0dXNbXSB7CiAgICByZXR1cm4gdGhpcy5zdGF0dXNlczsKICB9CgogIGdldCB0b3BTdHlsZSgpOiBzdHJpbmcgewogICAgaWYgKHRoaXMudGhlbWUgPT09ICJkZWZhdWx0IikgcmV0dXJuICIiOwogICAgcmV0dXJuICJiYWNrZ3JvdW5kLWNvbG9yOiAjNDI0MjQyOyI7CiAgfQoKICBnZXQgYXBwU3R5bGUoKTogc3RyaW5nIHsKICAgIHJldHVybiBgaGVpZ2h0OiAke3dpbmRvdy5pbm5lckhlaWdodH1weGA7CiAgfQoKICBAV2F0Y2goInN0YWdlIikKICBzdGFnZUNoYW5nZWQobmV3U3RhZ2U6IG51bWJlcikgewogICAgaWYgKG5ld1N0YWdlID09PSAxKSB7CiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMuc3RhZ2UrKzsKICAgICAgfSwgMCk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" v-bind:style=\"topStyle\">\n    <md-button\n      v-if=\"stage == 0 && theme == 'default'\"\n      v-on:click=\"setDarkMode\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 4%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Dark Theme</md-button>\n    <md-button\n      v-if=\"stage == 0 && theme == 'testing'\"\n      v-on:click=\"setLightMode\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 4%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Light Theme</md-button>\n    <md-button\n      v-if=\"stage == 0\"\n      v-on:click=\"runTests\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 1%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Run Tests</md-button>\n    <md-button\n      v-if=\"stage == -1\"\n      v-on:click=\"backToMain\"\n      class=\"md-flat\"\n      style=\"position: absolute; bottom: 1%; right: 0%; font-size: 10px; text-align: right; line-height: initial;\"\n      v-bind:md-theme=\"theme\"\n    >Back</md-button>\n    <div :style=\"appStyle\">\n      <md-card v-if=\"stage == 0\" class=\"centered\" v-bind:md-theme=\"theme\">\n        <md-card-content style=\"height: 100%;\">\n          <md-field>\n            <md-textarea placeholder=\"Enter ingredients here.\" v-model=\"autogrow\" md-autogrow></md-textarea>\n          </md-field>\n        </md-card-content>\n        <div class=\"md-layout\" style=\"height: 100%;\">\n          <div class=\"md-layout-item\"></div>\n          <div class=\"md-layout-item\">\n            <md-button\n              v-on:click=\"nextStage\"\n              class=\"md-raised centerbutton\"\n              style=\"font-size: 15px;\"\n            >Go</md-button>\n          </div>\n          <div class=\"md-layout-item\"></div>\n        </div>\n      </md-card>\n      <div v-if=\"stage == 1\" style=\"height: 100%;\">\n        <span\n          class=\"md-subheading\"\n          style=\"position: absolute; left: 50%; top: 50%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        >Organizing the cookbook...</span>\n        <pacman-loader\n          class=\"centered\"\n          style=\"position: absolute; left: 47.5%; top: 40%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        />\n      </div>\n      <div v-if=\"stage == 2\" style=\"height: 100%;\">\n        <span\n          class=\"md-title\"\n          style=\"position: absolute; left: 50%; top: 10%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        >Ok, does this look right?</span>\n        <md-card class=\"centered-without-height\" v-bind:md-theme=\"theme\">\n          <md-card-content style=\"height: 100%;\">\n            <md-table v-model=\"parsed\">\n              <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                <md-table-cell md-label=\"Quantity\" md-sort-by=\"quantity\">\n                  {{\n                  item.quantity\n                  }}\n                </md-table-cell>\n                <md-table-cell md-label=\"Unit\" md-sort-by=\"unit\">\n                  {{\n                  item.unit\n                  }}\n                </md-table-cell>\n                <md-table-cell md-label=\"Ingredient\" md-sort-by=\"ingredient\">\n                  {{\n                  item.name\n                  }}\n                </md-table-cell>\n              </md-table-row>\n            </md-table>\n          </md-card-content>\n          <div class=\"md-layout\" style=\"height: 100%;\">\n            <div class=\"md-layout-item\"></div>\n            <div class=\"md-layout-item\">\n              <md-button v-on:click=\"nextStage\" class=\"md-raised md-primary centerbutton-top\">Yes</md-button>\n            </div>\n            <div class=\"md-layout-item\"></div>\n          </div>\n        </md-card>\n      </div>\n      <div v-if=\"stage == 3\" style=\"height: 100%;\">\n        <span\n          class=\"md-subheading\"\n          style=\"position: absolute; left: 50%; top: 50%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        >Crunching the numbers...</span>\n        <pacman-loader\n          class=\"centered\"\n          style=\"position: absolute; left: 47.5%; top: 40%; margin-right: -50%; transform: translate(-50%, -50%);\"\n        />\n      </div>\n      <div v-if=\"stage == -1\" style=\"height: 100%;\">\n        <md-card class=\"centered\" v-bind:md-theme=\"theme\">\n          <md-card-content style=\"height: 100%;\">\n            <md-table v-model=\"testStatus\">\n              <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n                <md-table-cell\n                  href=\"https://pornhub.com\"\n                  md-label=\"Test\"\n                  md-sort-by=\"quantity\"\n                  v-bind:style=\"testColor(item.name)\"\n                >\n                  {{\n                  item.name\n                  }}\n                </md-table-cell>\n                <md-table-cell\n                  md-label=\"Status\"\n                  md-sort-by=\"unit\"\n                  v-bind:style=\"testColor(item.name)\"\n                >\n                  {{\n                  item.status\n                  }}\n                </md-table-cell>\n              </md-table-row>\n            </md-table>\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Watch } from \"vue-property-decorator\";\nimport {\n  IngredientData,\n  UnitVolume,\n  UnitStrings,\n  FracMap\n} from \"./common/common\";\nimport { TestCases, TestStatus } from \"./tests/tests\";\nimport * as J from \"jsdom\";\n\n@Component({\n  components: {}\n})\nexport default class App extends Vue {\n  private autogrow = \"1 cup milk\";\n  private parsed: IngredientData[] = [];\n  private stage = 0;\n  private theme = \"default\";\n  private statuses: TestStatus[] = [];\n\n  async getAmazonPrice() {\n    const query = \"https://www.amazon.com/s?k=milk\";\n    J.JSDOM.fromURL(query).then(dom => {\n      console.log(dom.serialize());\n    });\n  }\n\n  private nextStage() {\n    if (this.stage === 0) {\n      this.runParser();\n    }\n    this.stage++;\n    if (this.stage === 3) {\n      this.getAmazonPrice();\n    }\n  }\n\n  private runParser() {\n    this.parsed = [];\n    this.autogrow.split(\"\\n\").forEach(line => this.parseLine(line));\n  }\n\n  private runTests() {\n    this.stage = -1;\n    this.statuses = [];\n    TestCases.forEach(tc => {\n      this.statuses.push({\n        name: tc.name,\n        status: \"NOT STARTED\"\n      });\n    });\n    TestCases.forEach(tc => {\n      const statusDataMaybe = this.statuses.find(s => s.name == tc.name);\n      let statusData = this.statuses[0];\n      if (statusDataMaybe) statusData = statusDataMaybe;\n      statusData.status = \"RUNNING\";\n      this.autogrow = tc.input;\n      this.runParser();\n      let correct = true;\n      let failed = \"\";\n      let reasonComplete = false;\n      this.parsed.forEach((ing, index) => {\n        if (ing.name !== tc.output[index].name) {\n          correct = false;\n          failed = `Expected: ${tc.output[index].name}\\nGot: ${ing.name}`;\n        }\n        if (ing.quantity !== tc.output[index].quantity) {\n          correct = false;\n          failed = `Expected: ${tc.output[index].quantity}\\nGot: ${ing.quantity}`;\n        }\n        if (ing.unit !== tc.output[index].unit) {\n          correct = false;\n          failed = `Expected: ${tc.output[index].unit}\\nGot: ${ing.unit}`;\n        }\n        if (!correct && !reasonComplete) {\n          failed += `\\nFailed at: ${JSON.stringify(ing, null, 4)}`;\n          reasonComplete = true;\n        }\n      });\n      if (correct) statusData.status = \"PASS\";\n      else {\n        statusData.status = \"FAIL\";\n        console.log(\"TEST FAILED: \\n\" + failed);\n      }\n    });\n  }\n\n  private parseLine(line: string) {\n    const ingredient = {\n      name: \"\",\n      quantity: 0,\n      unit: UnitVolume.None\n    };\n    const tokens = line.trim().split(\" \");\n    for (let i = 0; i < tokens.length; i++) {\n      if (this.isQuantity(tokens[i])) {\n        ingredient.quantity = this.parseQuantity(tokens[i]);\n        continue;\n      }\n\n      const parsedUnit = this.parseUnit(tokens[i]);\n      if (parsedUnit != UnitVolume.None) {\n        ingredient.unit = parsedUnit;\n        continue;\n      }\n\n      ingredient.name += tokens[i] + \" \";\n    }\n\n    ingredient.name = ingredient.name.trim();\n    if (ingredient.name.includes(\",\")) {\n      ingredient.name = ingredient.name.substring(\n        0,\n        ingredient.name.indexOf(\",\")\n      );\n    }\n\n    this.parsed.push(ingredient);\n  }\n\n  private parseUnit(token: string): UnitVolume {\n    const processed = token.toLowerCase();\n    const doesIncludeArray = (input: string, terms: string[]): boolean => {\n      for (let i = 0; i < terms.length; i++) {\n        if (input.includes(terms[i])) return true;\n      }\n      return false;\n    };\n\n    if (doesIncludeArray(processed, UnitStrings.cup)) {\n      return UnitVolume.Cup;\n    }\n    if (doesIncludeArray(processed, UnitStrings.tablespoon))\n      return UnitVolume.Tablespoon;\n    if (doesIncludeArray(processed, UnitStrings.teaspoon))\n      return UnitVolume.Teaspoon;\n    if (doesIncludeArray(processed, UnitStrings.ounce)) return UnitVolume.Ounce;\n    return UnitVolume.None;\n  }\n\n  private isQuantity(token: string): boolean {\n    const chars = token.split(\"\");\n    for (let i = 0; i < chars.length; i++) {\n      if (chars[i] in FracMap) {\n        continue;\n      }\n      if (isNaN(Number(chars[i])) && chars[i] !== \"/\" && chars[i] !== \".\")\n        return false;\n    }\n    return true;\n  }\n\n  private parseQuantity(token: string): number {\n    const chars = token.split(\"\");\n    let shouldEval = false;\n    for (let i = 0; i < chars.length; i++) {\n      if (chars[i] in FracMap) {\n        chars[i] = FracMap[chars[i]];\n        shouldEval = true;\n      }\n    }\n    if (shouldEval) {\n      const joined = chars.join(\"+\");\n      return Number(eval(joined));\n    }\n    if (token.includes(\"/\")) {\n      const frac = token.split(\"/\");\n      return Number(frac[0]) / Number(frac[1]);\n    }\n    return Number(token);\n  }\n\n  private backToMain() {\n    this.autogrow = \"\";\n    this.parsed = [];\n    this.stage = 0;\n  }\n\n  private testColor(name: string) {\n    const statusData = this.statuses.find(s => s.name == name);\n    if (statusData)\n      if (statusData.status == \"PASS\") return \"color: darkseagreen;\";\n    if (statusData) if (statusData.status == \"FAIL\") return \"color: orangered;\";\n  }\n\n  private setDarkMode() {\n    this.theme = \"testing\";\n  }\n\n  private setLightMode() {\n    this.theme = \"default\";\n  }\n\n  get testStatus(): TestStatus[] {\n    return this.statuses;\n  }\n\n  get topStyle(): string {\n    if (this.theme === \"default\") return \"\";\n    return \"background-color: #424242;\";\n  }\n\n  get appStyle(): string {\n    return `height: ${window.innerHeight}px`;\n  }\n\n  @Watch(\"stage\")\n  stageChanged(newStage: number) {\n    if (newStage === 1) {\n      setTimeout(() => {\n        this.stage++;\n      }, 0);\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.centered {\n  margin: auto;\n  width: 50%;\n  height: 40%;\n  top: 20%;\n}\n\n.centered-without-height {\n  margin: auto;\n  width: 50%;\n  top: 20%;\n}\n\n.centerbutton {\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  top: 50%;\n}\n\n.centerbutton-top {\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  top: 200%;\n}\n</style>\n\n<style lang=\"scss\">\n@import \"~vue-material/dist/theme/engine\"; // Import the theme engine\n\n@include md-register-theme(\n  \"default\",\n  (\n    primary: md-get-palette-color(blue, A200),\n    // The primary color of your application\n      accent: md-get-palette-color(red, A200),\n    // The accent or secondary color\n      theme: light,\n    // This can be dark or light\n  )\n);\n\n@include md-register-theme(\n  \"testing\",\n  (\n    primary: md-get-palette-color(blue, A200),\n    // The primary color of your application\n      accent: md-get-palette-color(red, A200),\n    // The accent or secondary color\n      theme: dark,\n    // This can be dark or light\n  )\n);\n\n@import \"~vue-material/dist/theme/all\"; // Apply the theme\n</style>"]}]}